/*
 * Copyright (C) 2020 caleb
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.calebjkeller.pathify.wizard.pages;

import com.calebjkeller.pathify.App;
import com.calebjkeller.pathify.wizard.WizardModel;
import com.calebjkeller.pathify.wizard.WizardPanelController;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Caleb Keller
 */
public class TitleWizardPage extends javax.swing.JPanel implements WizardPageInterface {
    
    private String ID;
    private WizardPanelController controller;
    
    private File adfFile;
    private File csvFile;
    
    /**
     * Creates new form WizardPage
     */
    public TitleWizardPage(String ID, WizardPanelController controller) {
        this.ID = ID;
        this.controller = controller;
        initComponents();
    }
    
    public String getID() {
        return this.ID;
    }
    
    public void enable() {
        controller.setFinish(false);
        controller.setNext(false);
        controller.setQuit(true);
    }
    
    public void disable(WizardModel model) {
        if (this.adfFile != null) {
            model.setObject("adfFile", this.adfFile);
        }
        
        model.setObject("csvFile", this.csvFile);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        generateButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(400, 300));

        Header.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        Header.setForeground(new java.awt.Color(255, 255, 255));
        Header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header.setText("Pathify " + App.version);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("To begin generating vehicle routes, please select a folder\ncontaining a name table and a verified address table \n(from a previous execution of this program), or select a\nstandalone name table to have the address table generated\nfrom it (will take longer).");
        jScrollPane1.setViewportView(jTextArea1);

        generateButton.setText("Select CSV");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        selectButton.setText("Select Address Data File");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Header))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Header)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateButton)
                    .addComponent(selectButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                                            "CSV files", "csv");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showDialog(this, "Select");
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            this.csvFile = chooser.getSelectedFile();
            controller.setNext(true);
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                                            "Address Data File", "adf");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showDialog(this, "Select");
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                this.adfFile = chooser.getSelectedFile();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_selectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JButton generateButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
